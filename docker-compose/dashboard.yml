# docker compose -f docker-compose/dashboard.yml -p crypto_proj --env-file .env up -d
# docker compose -f docker-compose/dashboard.yml -p crypto_proj --env-file .env down
# docker compose -f docker-compose/dashboard.yml -p crypto_proj --env-file .env stop
# docker compose -f docker-compose/dashboard.yml -p crypto_proj --env-file .env start

services:
  s3_exporter:
    build: ../app/monitoring/s3_exporters
    container_name: crypto_proj_s3_exporter_container
    restart: always
    ports:
      - "${S3_EXPORTER_PORT}:8000"
    networks:
      - mlops_network

  prometheus:
    image: prom/prometheus:latest
    container_name: crypto_proj_prometheus_container
    restart: always
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ../app/monitoring/prometheus:/etc/prometheus
      - crypto_proj_prometheus_data:/prometheus
    networks:
      - mlops_network

  mysql:
    image: mysql:8
    container_name: crypto_proj_mysql_container
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - crypto_proj_mysql_data:/var/lib/mysql
    networks:
      - mlops_network
  
  grafana:
    image: grafana/grafana
    container_name: crypto_proj_grafana_container
    restart: always
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - crypto_proj_grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    networks:
      - mlops_network

volumes:
  crypto_proj_grafana_data:
    name: crypto_proj_grafana_data
    external: true
  crypto_proj_prometheus_data:
    name: crypto_proj_prometheus_data
    external: true
  crypto_proj_mysql_data:
    name: crypto_proj_mysql_data
    external: true

networks:
  mlops_network:
    external: true


